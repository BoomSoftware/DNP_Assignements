@using Models
@inject NavigationManager NavigationManager
@inject IFamilyService FamilyService

<div class="wrapper">
    <div class="inner">
        <EditForm Model="@Pet" OnValidSubmit="EditPet">
            <AuthorizeView Policy="MustBeAdministrator" Context="authorize">
                <button @onclick=RemoveMember>Remove Member</button>
            </AuthorizeView>
            <div class="form-wrapper">
                <label for>Name</label>
                <input type="text" class="form-control" @bind="petName"/>
            </div>
            <div class="form-wrapper">
                <label>Age</label>
                <input type="text" class="form-control" @bind="petAge"/>
            </div>
            <div class="form-wrapper">
                <label>Spices</label>
                <input type="text" class="form-control" @bind="petSpices"/>
            </div>
            <input type="submit" value="Edit"/>
        </EditForm>
    </div>
</div>

@code {

    [Parameter]
    public Family Family { get; set; }

    [Parameter]
    public Pet Pet { get; set; }

    private int petAge;
    private string petName;
    private string petSpices;

    protected override void OnInitialized()
    {
        petAge = Pet.Age;
        petName = Pet.Name;
        petSpices = Pet.Species;
    }


    public void EditPet()
    {
        FamilyService.EditPetAsync(Family, new Pet()
        {
            Age = petAge,
            Name = petName,
            Species = petSpices,
            Id = Pet.Id
        });
        NavigationManager.NavigateTo("/FamilyTree/" + Family.StreetName + " " + Family.HouseNumber);
    }

    public void RemoveMember()
    {
        FamilyService.RemovePetAsync(Family, Pet);
        NavigationManager.NavigateTo("/FamilyTree/" + Family.StreetName + " " + Family.HouseNumber);
    }


}