@inject IFamilyService FamilyService
@inject NavigationManager NavigationManager

@using Models
<div class="adding-form">
<button @onclick=RemoveMember>Remove Member</button>
<input type="text"  @bind="updatedFirstname"/>
<input type="text"  @bind="updatedLastname"/>
<input type="text"  @bind="updatedAge"/>
<input type="text"  @bind="updatedHeight"/>
<input type="text"  @bind="updatedSex"/>
<input type="text"  @bind="updatedWeight"/>
<input type="text"  @bind="updatedEyeColor"/>
<input type="text"  @bind="updatedHairColor"/>

@if (Adult is Adult)
{
    <input type="text"  @bind="updatedJob"/>
}

@if (Adult is Child)
{
    <input type="text" @bind="interest1"/>
    <input type="text" @bind="interest2"/>
    <input type="text" @bind="interest3"/>
    <input type="text" @bind="interest4"/>
    <input type="text" @bind="interest5"/>
}
<input type="submit" @onclick=EditPerson value="Edit">
</div>
@code {
    [Parameter] public Person Adult { get; set;}
    [Parameter] public Family Family { get; set;}

    private string updatedFirstname;
    private string updatedLastname;
    private int updatedAge;
    private int updatedHeight;
    private string updatedSex;
    private float updatedWeight;
    private string updatedEyeColor;
    private string updatedHairColor;
    private string updatedJob;
    private string interests;

    private string interest1;
    private string interest2;
    private string interest3;
    private string interest4;
    private string interest5;
    
    private List<ChildInterest> interestList;


    protected override void OnInitialized()
    {
        updatedFirstname = Adult.FirstName;
        updatedLastname = Adult.LastName;
        updatedAge = Adult.Age;
        updatedHeight = Adult.Height;
        updatedSex = Adult.Sex;
        updatedWeight = Adult.Weight;
        updatedHairColor = Adult.HairColor;
        updatedEyeColor = Adult.EyeColor;

        if (Adult is Adult)
        {
            updatedJob = ((Adult) Adult).JobTitle;
        }

        if (Adult is Child)
        {
            interestList = ((Child) Adult).ChildInterests;
            if(interestList.Count > 0)
                interest1 = interestList[0].InterestId;
            if(interestList.Count > 1)
                interest2 = interestList[1].InterestId;
            if(interestList.Count > 2)
                interest3 = interestList[2].InterestId;
            if(interestList.Count > 3)
                interest4 = interestList[3].InterestId;
            if(interestList.Count > 4)
                interest5 = interestList[4].InterestId;

        }
    }

    public void EditPerson()
    {
        if (Adult is Adult)
        {
            FamilyService.EditPerson(Family, new Adult()
            {
                Age = updatedAge,
                FirstName = updatedFirstname,
                LastName = updatedLastname,
                Height = updatedHeight,
                Sex = updatedSex,
                Weight = updatedWeight,
                EyeColor = updatedEyeColor,
                HairColor = updatedHairColor,
                JobTitle = updatedJob,
                Id = Adult.Id
            });
           
        }

        if (Adult is Child)
        {
            List<ChildInterest> updatedInterest = new List<ChildInterest>();
            
            if(interest1 != null && !interest1.Equals(""))
                updatedInterest.Add(new ChildInterest(){ChildId = Adult.Id, InterestId = interest1});
            if(interest2 != null && !interest2.Equals(""))
                updatedInterest.Add(new ChildInterest(){ChildId = Adult.Id, InterestId = interest2});
            if(interest3 != null && !interest3.Equals(""))
                updatedInterest.Add(new ChildInterest(){ChildId = Adult.Id, InterestId = interest3});
            if(interest4 != null && !interest4.Equals(""))
                updatedInterest.Add(new ChildInterest(){ChildId = Adult.Id, InterestId = interest4});
            if(interest5 != null && !interest5.Equals(""))
                updatedInterest.Add(new ChildInterest(){ChildId = Adult.Id, InterestId = interest5});
            
            FamilyService.EditPerson(Family, new Child()
            {
                Age = updatedAge,
                FirstName = updatedFirstname,
                LastName = updatedLastname,
                Height = updatedHeight,
                Sex = updatedSex,
                Weight = updatedWeight,
                EyeColor = updatedEyeColor,
                HairColor = updatedHairColor,
                Id = Adult.Id,
                ChildInterests = updatedInterest
            });
        }
        NavigationManager.NavigateTo("/FamilyTree/" + Family.StreetName + " " + Family.HouseNumber);
    }

    public void RemoveMember()
    {
        if(Adult is Adult)
            FamilyService.RemovePerson(Family, Adult, "Adult");
        if(Adult is Child)
            FamilyService.RemovePerson(Family, Adult, "Child");
        
        NavigationManager.NavigateTo("/FamilyTree/" + Family.StreetName + " " + Family.HouseNumber);
    }
}