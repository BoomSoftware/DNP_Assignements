@using Models
@using System.Threading
@inject IFamilyService FamilyService
@inject NavigationManager NavigationManager;

@if (MemberType.Equals("Adult") || MemberType.Equals("Child"))
{
   <div class="adding-box">
       <h3>AddNewAdultBox</h3>
       <label>First Name</label>
       <input type="text" @bind="firstName"/>
   
       <label>Last Name</label>
       <input type="text" @bind="lastName"/>
   
       <label>Age</label>
       <input type="number" @bind="age"/>
   
       <label>Weight</label>
       <input type="number" @bind="weight"/>
   
       <label>Height</label>
       <input type="number" @bind="height"/>
   
       <label>Sex</label>
       <select @bind="sex">
           <option>M</option>
           <option>F</option>
       </select>
   
       <label>Hair Color</label>
       <select @bind="hairColor">
           <option>Blond</option>
           <option>Red</option>
           <option>Brown</option>
           <option>Black</option>
           <option>White</option>
           <option>Gray</option>
           <option>Blue</option>
           <option>Leverpostej</option>
       </select>
   
       <label>Eye Color</label>
       <select @bind="eyeColor">
           <option>Brown</option>
           <option>Grey</option>
           <option>Green</option>
           <option>Blue</option>
           <option>Amber</option>
           <option>Hazel</option>
       </select>
   
   
       @if (MemberType.Equals("Adult"))
       {
           <label>Job Title</label>
           <input type="text" @bind="jobTitle"/>
       }
       
       @if (MemberType.Equals("Child"))
       {
           <label>Interests</label>
           <input type="text" @bind="interest1"/>
           
           @((MarkupString)inputs)

           if (currentInput < 6)
           {
               <button @onclick=AddNewInterestInput>Add</button>
           }
       }
   
   
       <input type="submit" value="Add" @onclick=AddNewMember/>
   </div>
}

@if (MemberType.Equals("Pet"))
{
    <div class="adding-box">
        <label>Name</label>
        <input type="text" @bind="petName"/>
        
        <label>Age</label>
        <input type="number" @bind="petAge"/>
        
        <label>Species</label>
        <input type="text" @bind="petSpecies"/>
        
        <input type="submit" value="Add" @onclick=AddNewMember/>
    </div>
}


@code {

    [Parameter]
    public string MemberType { get; set; }

    [Parameter]
    public Family Family { get; set; }

    private string firstName;
    private string lastName;
    private int age;
    private int weight;
    private int height;
    private string sex = "M";
    private string hairColor = "Blond";
    private string eyeColor = "Brown";
    private string petName;
    private int petAge;
    private string petSpecies;

    private string interest1;
    private string interest2;
    private string interest3;
    private string interest4;
    private string interest5;

    private string jobTitle;
    private int id;
    private string inputs;
    private int currentInput = 1;
    private List<ChildInterest> interests;

    public void AddNewMember()
    {
        if (MemberType.Equals("Adult"))
        {
            List<Family> families = FamilyService.GetAllFamilies();
            foreach (var family in families)
            {
                foreach (var adult in family.Adults)
                {
                    id = adult.Id + 1;
                }
            }
            FamilyService.AddPerson(Family, new Adult()
            {
                Id = id,
                Age = age,
                FirstName = firstName,
                LastName = lastName,
                Height = height,
                Sex = sex,
                Weight = weight,
                EyeColor = eyeColor,
                HairColor = hairColor,
                JobTitle = jobTitle
            }, MemberType);
        }


        if (MemberType.Equals("Pet"))
        {
            List<Family> families = FamilyService.GetAllFamilies();
            foreach (var family in families)
            {
                foreach (var pet in family.Pets)
                {
                    id = pet.Id + 1;
                }
            }
            
            FamilyService.AddPet(Family, new Pet()
            {
                Age = petAge,
                Name = petName,
                Id = id,
                Species = petSpecies
            });
        }

        if (MemberType.Equals("Child"))
        {
            List<Family> families = FamilyService.GetAllFamilies();
            foreach (var family in families)
            {
                foreach (var child in family.Children)
                {
                    id = child.Id + 1;
                }
            }
            
            interests = new List<ChildInterest>();
            
            if(interest1 != null && !interest1.Equals(""))
                interests.Add(new ChildInterest(){ChildId = id, InterestId = interest1});
            if(interest2 != null && !interest2.Equals(""))
                interests.Add(new ChildInterest(){ChildId = id, InterestId = interest2});
            if(interest3 != null && !interest3.Equals(""))
                interests.Add(new ChildInterest(){ChildId = id, InterestId = interest3});
            if(interest4 != null && !interest4.Equals(""))
                interests.Add(new ChildInterest(){ChildId = id, InterestId = interest4});
            if(interest5 != null && !interest5.Equals(""))
                interests.Add(new ChildInterest(){ChildId = id, InterestId = interest5});

                FamilyService.AddPerson(Family, new Child()
            {
                Id = id,
                Age = age,
                FirstName = firstName,
                LastName = lastName,
                Height = height,
                Sex = sex,
                Weight = weight,
                EyeColor = eyeColor,
                HairColor = hairColor,
                ChildInterests = interests 

            },  MemberType);
        }
        NavigationManager.NavigateTo("/FamilyTree/" + Family.StreetName + " " + Family.HouseNumber);
    }

    public void AddNewInterestInput()
    {
        currentInput++;
        inputs += "<input type='text' @bind='interest" + currentInput + "'/>";
    }

}